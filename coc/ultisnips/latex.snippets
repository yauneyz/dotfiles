# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt
global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and x != '0'

endglobal

# Font Manipulation
snippet bf "Bold font"
\mathbf{$1}$2
endsnippet

snippet par "Paragraph"
\paragraph{$1}$2
endsnippet

snippet box "Box"
`!p snip.rv = '┌' + '─' * (len(t[1]) + 2) + '┐'`
│ $1 │
`!p snip.rv = '└' + '─' * (len(t[1]) + 2) + '┘'`
$0
endsnippet

snippet mk "Math" wA
$${1}$$2
endsnippet

snippet dm "Math" wA
\[
$1
\] $0
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet    snip.rv = ''
`$2
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

snippet "(\\?\w+)(\.\.)" "Math-mode postfix" riA
$`!p snip.rv=match.group(1)`$
endsnippet

context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

snippet sum "summation"
\sum_{$1}^{$2}
endsnippet

snippet ooo "infinity" riA
\infty
endsnippet

snippet enum "Enumerate"
\begin{enumerate}
\item$1
\end{enumerate}$2
endsnippet

context "math()"
snippet "matrix" "Matrix" riA
\begin{bmatrix}
$1
\end{bmatrix}$2
endsnippet

context "math()"
snippet "cases" "Piecewise function" riA
\begin{cases}
$1
\end{cases}$2
endsnippet

#snippet subs "Subsection"

priority 300
context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

context "math()"
snippet lim "limit" wA
\lim_{$1 \to $2}$0
endsnippet

context "math()"
snippet "ip" "inner product" ri
\ip{$1}{$2}$0
endsnippet

context "math()"
snippet "sqrt" "Square Root" riA
\sqrt{$1}$0
endsnippet

context "math()"
snippet "bin" "choose" riA
\binom{$1}{$2}$0
endsnippet

context "math()"
snippet "tran" "Transpose" riA
^\intercal
endsnippet

context "math()"
snippet "delta" "Delta" riA
\delta
endsnippet

context "math()"
snippet "eps" "Epsilon" riA
\epsilon
endsnippet

context "math()"
snippet "rho" "Rho" riA
\rho
endsnippet

context "math()"
snippet "pi" "Pi" riA
\pi
endsnippet

context "math()"
snippet "phi" "Phi" riA
\phi
endsnippet

context "math()"
snippet "psi" "Psi" riA
\psi
endsnippet

context "math()"
snippet "phi" "Phi" riA
\phi
endsnippet

context "math()"
snippet "lambda" "lambda" riA
\lambda
endsnippet

context "math()"
snippet "alpha" "alpha" riA
\alpha
endsnippet

context "math()"
snippet "beta" "beta" riA
\beta
endsnippet

context "math()"
snippet "gamma" "gamma" riA
\gamma
endsnippet

context "math()"
snippet "omega" "omega" riA
\omega
endsnippet

context "math()"
snippet "Omega" "Omega" riA
\Omega
endsnippet

context "math()"
snippet "sigma" "sigma" riA
\sigma
endsnippet

context "math()"
snippet "mu" "mu" riA
\mu
endsnippet

context "math()"
snippet "nnu" "nu" riA
\nu
endsnippet

context "math()"
snippet "scr" "Math Script" riA
\mathscr{$1}$0
endsnippet

context "math()"
snippet "cal" "Math Calligraphy" riA
\mathcal{$1}$0
endsnippet

context "math()"
snippet "bb" "Math Blackboard" riA
\mathbb{$1}$0
endsnippet

context "math()"
snippet "inv" "Inverse" riA
^{-1}
endsnippet

context "math()"
snippet "varp" "varphi" riA
\varphi
endsnippet

context "math()"
snippet "cases" "Piecewise" riA
\begin{cases}
	$1
\end{cases}$0
endsnippet

context "math()"
snippet "par" "Partial Derivative" riA
\partial
endsnippet

context "math()"
snippet "smooth" "Smooth function" riA
C^\infty
endsnippet

snippet "tex" "Anki Latex" i
\($1\)$0
endsnippet

context "math()"
snippet "scrA" "Math Scr" riA
\mathscr{A}
endsnippet
